var b=({expanded:g,selected:N})=>({expanded:g,selected:N,init(){this.expanded=this.expanded||[],this.selected=this.selected||[],this.$watch("expanded",e=>{this.expanded=Array.isArray(e)?e:Array.from(e)||[]}),this.$watch("selected",e=>{this.selected=Array.isArray(e)?e:Array.from(e)||[]})},toggleItem(e){this.expanded.includes(e)?this.expanded=this.expanded.filter(p=>p!==e):this.expanded.push(e)},selectItem(e){this.selected.includes(e)?this.selected=this.selected.filter(p=>p!==e):this.selected.push(e)},isExpanded(e){return this.expanded&&Array.from(this.expanded).includes(e)},isSelected(e){return this.selected&&Array.from(this.selected).includes(e)}}),x=(g={})=>{let e={...{data:[],idField:"id",nameField:"name",childrenField:"children",expandedField:"expanded",maxDepth:-1,maxVisibleDepth:4,allowDragDrop:!0,allowRearrange:!0,allowCrossCategory:!0,showActions:!0,nodeTemplate:null,onNodeSelect:()=>{},onNodeMove:()=>{},onNodeAdd:()=>{},onNodeEdit:()=>{},onNodeDelete:()=>{},onTreeUpdate:()=>{},searchPlaceholder:"Search nodes...",highlightSearch:!0,onSearch:()=>{},searchDebounceMs:300,enableKeyboardNav:!0,onKeyboardNav:()=>{},updateDebounceMs:50,useDeepCloning:!1},...g};return{treeData:(t=>t||[])(e.data),jsonOutput:"",selectedNode:null,draggedNodeId:null,dropTargetIndex:null,dropTargetParent:null,showNodeModal:!1,editingNodeId:null,nodeForm:{name:"",parentId:""},showJsonModal:!1,jsonInput:"",copied:!1,dropPosition:"inside",pathMap:{},searchQuery:"",searchResults:[],lastSearchTime:null,searchDebounceTimeout:null,lastFocusedNode:null,updateTreeDebounceTimeout:null,isUpdating:!1,init(){this.updateJsonOutput(),this.ensureChildrenArrays(),this.updateNodeVisibility(),this.buildPathMap(),this.updateJsonOutput(),this.$dispatch("treeview:initialized",{tree:this.treeData}),this.searchQuery="",this.searchResults=[],this.$watch("searchQuery",t=>this.handleSearch(t)),e.enableKeyboardNav&&this.setupKeyboardNavigation(),this.watchNodesVisibility()},updateNodeVisibility(){let t=this.getMaxVisibleDepth(),i=(d,r=1)=>{d.forEach(s=>{s._visible=r<=t,s[e.childrenField]&&s[e.childrenField].length>0&&i(s[e.childrenField],r+1)})};i(this.treeData)},watchNodesVisibility(){setTimeout(()=>{let t=document.querySelectorAll(".tree-container");if(!t.length)return;let i=new MutationObserver(d=>{if(this.isUpdating)return;let r=!1;for(let s of d)if(s.type==="attributes"&&(s.attributeName==="style"||s.attributeName==="class")){let n=s.target.id?.replace("node-","");if(n){let l=this.findNodeById(n);if(l&&l[e.expandedField]){r=!0;break}}}r&&(this.updateTreeDebounceTimeout&&clearTimeout(this.updateTreeDebounceTimeout),this.updateTreeDebounceTimeout=setTimeout(()=>{this.updateNodeVisibility(),this.treeData=[...this.treeData],this.isUpdating=!1},100),this.isUpdating=!0)});t.forEach(d=>{i.observe(d,{attributes:!0,attributeFilter:["style","class"]})})},1e3)},redrawTree(){this.isUpdating||(this.isUpdating=!0,this.updateTreeDebounceTimeout&&clearTimeout(this.updateTreeDebounceTimeout),this.updateNodeVisibility(),this.updateTreeDebounceTimeout=setTimeout(()=>{e.useDeepCloning?this.treeData=JSON.parse(JSON.stringify(this.treeData)):this.treeData=[...this.treeData],this.isUpdating=!1},e.updateDebounceMs))},buildPathMap(){this.pathMap={};let t=(i,d=[])=>{i.forEach(r=>{let s=[...d,r[e.idField]];this.pathMap[r[e.idField]]=s,r[e.childrenField]&&r[e.childrenField].length>0&&t(r[e.childrenField],s)})};t(this.treeData)},get flattenedNodes(){let t=[],i=(d,r=0)=>{d.forEach(s=>{t.push({id:s[e.idField],name:s[e.nameField],level:r}),s[e.childrenField]&&s[e.childrenField].length>0&&i(s[e.childrenField],r+1)})};return i(this.treeData),t},findNodeById(t,i=this.treeData){for(let d of i){if(d[e.idField]===t)return d;if(d[e.childrenField]&&d[e.childrenField].length>0){let r=this.findNodeById(t,d[e.childrenField]);if(r)return r}}return null},findParentNode(t,i=this.treeData){for(let d of i){if(d[e.childrenField]&&d[e.childrenField].some(r=>r[e.idField]===t))return d;if(d[e.childrenField]&&d[e.childrenField].length>0){let r=this.findParentNode(t,d[e.childrenField]);if(r)return r}}return null},selectNode(t){this.selectedNode=t;let i=this.findNodeById(t);i&&(e.onNodeSelect(i),this.$dispatch("treeview:node-selected",{node:i}))},toggleNode(t){let i=d=>{for(let r=0;r<d.length;r++){if(d[r][e.idField]===t)return d[r][e.childrenField]||(d[r][e.childrenField]=[]),d[r][e.expandedField]=!d[r][e.expandedField],!0;if(d[r][e.childrenField]&&d[r][e.childrenField].length>0&&i(d[r][e.childrenField]))return!0}return!1};i(this.treeData)},removeNodeById(t,i=this.treeData){for(let d=0;d<i.length;d++){if(i[d][e.idField]===t){let r=i.splice(d,1)[0];return e.onNodeDelete(r),this.$dispatch("treeview:node-deleted",{node:r}),!0}if(i[d][e.childrenField]&&i[d][e.childrenField].length>0&&this.removeNodeById(t,i[d][e.childrenField]))return!0}return!1},addNode(){this.showNodeModal=!0,this.editingNodeId=null,this.nodeForm={name:"",parentId:""}},editNode(t){let i=this.findNodeById(t);i&&(this.editingNodeId=t,this.nodeForm={name:i[e.nameField],parentId:""},this.showNodeModal=!0)},saveNode(){if(!this.nodeForm.name.trim()){alert("Node name cannot be empty");return}if(this.editingNodeId){let t=this.findNodeById(this.editingNodeId);if(t){let i=t[e.nameField];t[e.nameField]=this.nodeForm.name,e.onNodeEdit(t,{oldName:i}),this.$dispatch("treeview:node-edited",{node:t,oldName:i})}}else{let t=`node-${Date.now()}`,i=this.nodeForm.parentId,d=i?this.getNodeDepth(i)+1:1,r={[e.idField]:t,[e.nameField]:this.nodeForm.name,[e.expandedField]:!0,[e.childrenField]:[],_visible:d<=this.getMaxVisibleDepth()};if(this.nodeForm.parentId){let s=this.findNodeById(this.nodeForm.parentId);s&&(s[e.childrenField]||(s[e.childrenField]=[]),s[e.childrenField].push(r),s[e.expandedField]=!0,e.onNodeAdd(r,s),this.$dispatch("treeview:node-added",{node:r,parent:s}))}else this.treeData.push(r),e.onNodeAdd(r,null),this.$dispatch("treeview:node-added",{node:r,parent:null});this.buildPathMap(),this.updateNodeVisibility()}this.showNodeModal=!1,this.updateJsonOutput(),this.redrawTree()},deleteNode(t){confirm("Are you sure you want to delete this node and all its children?")&&(this.removeNodeById(t),this.buildPathMap(),this.updateJsonOutput())},dragStart(t,i){e.allowDragDrop&&(this.draggedNodeId=i,t.dataTransfer.setData("text/plain",i),t.target.classList.add("dragging"))},dragEnd(){document.querySelectorAll(".dragging").forEach(t=>{t.classList.remove("dragging")}),document.querySelectorAll(".dragover, .dragover-before, .dragover-after").forEach(t=>{t.classList.remove("dragover","dragover-before","dragover-after")}),this.dropTargetIndex=null,this.dropTargetParent=null,this.dropPosition="inside"},dragLeave(t){t.currentTarget.classList.remove("dragover","dragover-before","dragover-after")},dragOver(t,i,d){if(!e.allowDragDrop||(t.preventDefault(),this.draggedNodeId===d))return;let r=d===null?this.treeData[i]:this.findNodeById(d)?.children?.[i];if(!r&&d!==null){let c=this.findNodeById(d);if(!c)return;c[e.expandedField]||(c[e.expandedField]=!0)}let s=t.currentTarget.getBoundingClientRect(),n=t.clientY,l=s.height,h=(n-s.top)/l,f=r&&r[e.childrenField]&&r[e.childrenField].length>0;h>=.25&&h<=.75?(this.dropPosition="inside",t.currentTarget.classList.add("dragover"),t.currentTarget.classList.remove("dragover-before","dragover-after")):h<.25?(this.dropPosition="before",t.currentTarget.classList.add("dragover-before"),t.currentTarget.classList.remove("dragover-after","dragover")):(this.dropPosition="after",t.currentTarget.classList.add("dragover-after"),t.currentTarget.classList.remove("dragover-before","dragover")),this.dropTargetIndex=i,this.dropTargetParent=d},wouldCreateCycle(t,i){if(i===null||i===void 0)return!1;let d=this.pathMap[i];return d&&d.includes(t)},isFromDifferentCategory(t,i){if(e.allowCrossCategory||i===null)return!1;let d=this.getTopmostParent(t),r=this.getTopmostParent(i);return!d||!r?!1:d!==r},getTopmostParent(t){let i=this.pathMap[t];return!i||i.length<=1?null:i[0]},wouldExceedMaxDepth(t,i){if(e.maxDepth===-1||i===null)return!1;let d=this.getNodeDepth(i),r=this.getSubtreeDepth(t);return d+r>e.maxDepth},getNodeDepth(t){let i=this.pathMap[t];return i?i.length:0},getMaxVisibleDepth(){return Math.max(1,e.maxVisibleDepth||4)},exceedsVisibleDepth(t){return this.getNodeDepth(t)>this.getMaxVisibleDepth()},isNodeVisible(t){return t._visible!==void 0?t._visible:t[e.idField]?this.getNodeDepth(t[e.idField])<=this.getMaxVisibleDepth():!0},getSubtreeDepth(t){let i=this.findNodeById(t);if(!i||!i[e.childrenField]||i[e.childrenField].length===0)return 1;let d=0;for(let r of i[e.childrenField]){let s=this.getSubtreeDepth(r[e.idField]);d=Math.max(d,s)}return 1+d},drop(t,i,d){if(t.preventDefault(),!e.allowDragDrop||!this.draggedNodeId||this.isUpdating)return;this.isUpdating=!0;let r=this.findNodeById(this.draggedNodeId);if(!r){this.isUpdating=!1;return}let s=r[e.expandedField]===!0,n=this.findParentNode(this.draggedNodeId),l=null,o=0,h=d===null?this.treeData[i]:d&&i!==void 0?this.findNodeById(d)?.children?.[i]:null;if(this.dropPosition==="inside")if(l=d===null&&h?h.id:d,h)l=h.id,h[e.childrenField]||(h[e.childrenField]=[]),o=h[e.childrenField].length,h[e.expandedField]=!0;else{let a=this.findNodeById(l);a?(a[e.childrenField]||(a[e.childrenField]=[]),o=a[e.childrenField].length,a[e.expandedField]=!0):o=0}else if(d===null)l=null,o=i,this.dropPosition==="after"&&o++;else{l=d;let a=this.findNodeById(d);a&&(a[e.childrenField]||(a[e.childrenField]=[]),a[e.expandedField]=!0),o=i,this.dropPosition==="after"&&o++}let f=l===null?1:this.getNodeDepth(l)+1;if(f>this.getMaxVisibleDepth()&&console.log(`Dropping at depth ${f} which exceeds maxVisibleDepth ${this.getMaxVisibleDepth()}`),this.wouldCreateCycle(this.draggedNodeId,l)){console.log("Cannot move a node into its own descendant"),this.dragEnd(),this.isUpdating=!1;return}if(e.maxDepth!==-1&&this.wouldExceedMaxDepth(this.draggedNodeId,l)){console.log("Cannot exceed maximum depth"),this.dragEnd(),this.isUpdating=!1;return}let c=e.useDeepCloning?JSON.parse(JSON.stringify(r)):{...r};if(c[e.expandedField]=s,c._visible=f<=this.getMaxVisibleDepth(),n){let a=n[e.childrenField].findIndex(u=>u[e.idField]===this.draggedNodeId);a!==-1&&(l===n[e.idField]&&a<o&&o--,n[e.childrenField].splice(a,1))}else{let a=this.treeData.findIndex(u=>u[e.idField]===this.draggedNodeId);a!==-1&&(l===null&&a<o&&o--,this.treeData.splice(a,1))}if(l===null)this.treeData.splice(o,0,c);else{let a=this.findNodeById(l);a&&(a[e.childrenField]||(a[e.childrenField]=[]),a[e.childrenField].splice(o,0,c),a[e.expandedField]=!0)}this.dragEnd(),this.buildPathMap(),this.updateNodeVisibility(),this.updateJsonOutput();let D={node:c,oldParent:n,newParentId:l,newIndex:o,position:this.dropPosition};e.onNodeMove(c,D),this.updateTreeDebounceTimeout&&clearTimeout(this.updateTreeDebounceTimeout),this.updateTreeDebounceTimeout=setTimeout(()=>{if(l!==null){let a=m=>{let F=this.findParentNode(m);F&&(F[e.expandedField]=!0,a(F[e.idField]))};a(l);let u=this.findNodeById(l);u&&(u[e.expandedField]=!0)}this.$dispatch("treeview:node-moved",D),this.isUpdating=!1},e.updateDebounceMs)},ensureChildrenArrays(){let t=i=>{i.forEach(d=>{d[e.childrenField]||(d[e.childrenField]=[]),d[e.childrenField].length>0&&t(d[e.childrenField])})};t(this.treeData)},updateJsonOutput(){this.jsonOutput=JSON.stringify(this.treeData,null,2)},handleSearch(t){clearTimeout(this.searchDebounceTimeout),this.searchDebounceTimeout=setTimeout(()=>{this.searchResults=this.searchTree(t),e.onSearch(t,this.searchResults)},e.searchDebounceMs)},searchTree(t){let i=[],d=(r,s=[])=>{r.forEach(n=>{let l=[...s,n[e.idField]];n[e.nameField].toLowerCase().includes(t.toLowerCase())&&i.push({node:n,path:l}),n[e.childrenField]&&n[e.childrenField].length>0&&d(n[e.childrenField],l)})};return d(this.treeData),i},setupKeyboardNavigation(){this.$el.addEventListener("keydown",t=>{if(!this.selectedNode)return;let i=t.key,d=this.findNodeById(this.selectedNode);if(d){switch(i){case"ArrowUp":this.navigateUp(d);break;case"ArrowDown":this.navigateDown(d);break;case"ArrowLeft":this.collapseNode(d);break;case"ArrowRight":this.expandNode(d);break;case"Enter":this.selectNode(d[e.idField]);break;default:break}e.onKeyboardNav(i,d)}})},navigateUp(t){let i=this.pathMap[t[e.idField]];if(!i)return;let d=i[i.length-2];if(!d)return;let r=this.findNodeById(d);if(!r)return;let s=r[e.childrenField].findIndex(n=>n[e.idField]===t[e.idField]);if(s>0){let n=r[e.childrenField][s-1];this.selectNode(n[e.idField])}else this.selectNode(r[e.idField])},navigateDown(t){if(t[e.childrenField]&&t[e.childrenField].length>0)this.selectNode(t[e.childrenField][0][e.idField]);else{let i=this.pathMap[t[e.idField]];if(!i)return;let d=i[i.length-2];if(!d)return;let r=this.findNodeById(d);if(!r)return;let s=r[e.childrenField].findIndex(n=>n[e.idField]===t[e.idField]);if(s<r[e.childrenField].length-1){let n=r[e.childrenField][s+1];this.selectNode(n[e.idField])}else{let n=i[i.length-3];if(!n)return;let l=this.findNodeById(n);if(!l)return;let o=l[e.childrenField].findIndex(h=>h[e.idField]===r[e.idField]);if(o<l[e.childrenField].length-1){let h=l[e.childrenField][o+1];this.selectNode(h[e.idField])}}}},collapseNode(t){if(t[e.expandedField])t[e.expandedField]=!1;else{let i=this.pathMap[t[e.idField]];if(!i)return;let d=i[i.length-2];if(!d)return;this.selectNode(d)}},expandNode(t){t[e.expandedField]?t[e.childrenField]&&t[e.childrenField].length>0&&this.selectNode(t[e.childrenField][0][e.idField]):t[e.expandedField]=!0},nodeMatchesSearch(t){return!this.searchQuery||!this.searchQuery.trim()?!1:this.searchResults.some(i=>i.id===t[e.idField])},getHighlightRanges(t){if(!this.searchQuery||!e.highlightSearch||!this.searchQuery.trim())return[];let i=this.searchQuery.toLowerCase(),d=t.toLowerCase(),r=[],s=0;for(;(s=d.indexOf(i,s))!==-1;)r.push([s,s+i.length]),s+=i.length;return r},formatNodeText(t){let i=t[e.nameField];if(!e.highlightSearch||!this.searchQuery.trim())return i;let d=this.getHighlightRanges(i);if(d.length===0)return i;let r="",s=0;return d.forEach(([n,l])=>{r+=i.slice(s,n),r+=`<span class="search-highlight">${i.slice(n,l)}</span>`,s=l}),r+=i.slice(s),r},expandSearchResults(){let t=i=>{let d=this.treeData;for(let r=0;r<i.length-1;r++){let s=i[r],n=d.find(l=>l[e.nameField]===s);n&&(n[e.expandedField]=!0,d=n[e.childrenField]||[])}};this.searchResults.forEach(i=>t(i.path))},shouldRenderNode(t,i){return i<=this.getMaxVisibleDepth()?!0:t._visible!==void 0?t._visible:t[e.idField]?this.getNodeDepth(t[e.idField])<=this.getMaxVisibleDepth():!1},expandAll(){let t=i=>{i.forEach(d=>{d[e.expandedField]=!0,d[e.childrenField]?.length&&t(d[e.childrenField])})};t(this.treeData),this.redrawTree()},collapseAll(){let t=i=>{i.forEach(d=>{d[e.expandedField]=!1,d[e.childrenField]?.length&&t(d[e.childrenField])})};t(this.treeData),this.redrawTree()}}};document.addEventListener("alpine:init",()=>{Alpine.data("TreeNode",b),Alpine.data("TreeView",x)});
